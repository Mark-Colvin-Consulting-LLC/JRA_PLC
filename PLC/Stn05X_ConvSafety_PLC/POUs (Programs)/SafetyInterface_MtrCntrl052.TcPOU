<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="SafetyInterface_MtrCntrl052" Id="{b45e1794-8829-4c37-b1bb-5bde821ec8d0}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM SafetyInterface_MtrCntrl052
VAR
	
	pMtrRunning: POINTER TO ConvMtrRunningPuck;
	pSafety: POINTER TO Plc2PlcDataSafetyPuckConv;
	
// Stn052_05_StnMain.MotorCtrl
// Call to motor control function block for each main line motor
// Blue Recv - Enc54: 7, 8, 9  Enc55: 5,6
// Red Recv  - Enc54: 4, 5, 6  Enc55: 3, 4
// Grn Recv  - Enc54: 1, 2, 3  Enc55: 1, 2

	{attribute 'TcLinkToOSO':= '	
		.Enc055Mtr01.iDisconnectOk :=  <0,1,4>TIIB[N31S00 (AL1332)]^N31S05 (AL2341)^TxPDO^input byte 1;
		.Enc055Mtr02.iDisconnectOk :=  <0,1,2>TIIB[N32S00 (AL1332)]^N32S01 (AL2341)^TxPDO^input byte 3;
		.Enc055Mtr03.iDisconnectOk :=  <0,1,4>TIIB[N31S00 (AL1332)]^N31S07 (AL2341)^TxPDO^input byte 3;
		.Enc055Mtr04.iDisconnectOk :=  <0,1,3>TIIB[N32S00 (AL1332)]^N32S01 (AL2341)^TxPDO^input byte 1;
		.Enc055Mtr05.iDisconnectOk :=  <0,1,4>TIIB[N31S00 (AL1332)]^N31S05 (AL2341)^TxPDO^input byte 3;
		.Enc055Mtr06.iDisconnectOk :=  <0,1,3>TIIB[N32S00 (AL1332)]^N32S01 (AL2341)^TxPDO^input byte 3;
		.Enc054Mtr01.iDisconnectOk :=  <0,1,3>TIIB[N26S00 (AL1332)]^N26S04 (AL2341)^TxPDO^input byte 3;
		.Enc054Mtr02.iDisconnectOk :=  <0,1,3>TIIB[N27S00 (AL1332)]^N27S04 (AL2341)^TxPDO^input byte 3;
		.Enc054Mtr03.iDisconnectOk :=  <0,1,3>TIIB[N27S00 (AL1332)]^N27S04 (AL2341)^TxPDO^input byte 3;
		.Enc054Mtr04.iDisconnectOk :=  <0,1,4>TIIB[N26S00 (AL1332)]^N26S04 (AL2341)^TxPDO^input byte 1;
		.Enc054Mtr05.iDisconnectOk :=  <0,1,4>TIIB[N27S00 (AL1332)]^N27S04 (AL2341)^TxPDO^input byte 1;
		.Enc054Mtr06.iDisconnectOk :=  <0,1,4>TIIB[N28S00 (AL1332)]^N28S04 (AL2341)^TxPDO^input byte 1;
		.Enc054Mtr07.iDisconnectOk :=  <0,1,4>TIIB[N26S00 (AL1332)]^N26S04 (AL2341)^TxPDO^input byte 3;
		.Enc054Mtr08.iDisconnectOk :=  <0,1,4>TIIB[N27S00 (AL1332)]^N27S04 (AL2341)^TxPDO^input byte 3;
		.Enc054Mtr09.iDisconnectOk :=  <0,1,4>TIIB[N28S00 (AL1332)]^N28S04 (AL2341)^TxPDO^input byte 3'}
	{attribute 'TcLinkTo':= '	
		.Enc055Mtr01.iOverloadTripped := TIIB[N30S06 (EL1008)]^Channel 6^Input;
		.Enc055Mtr02.iOverloadTripped := TIIB[N30S06 (EL1008)]^Channel 8^Input;
		.Enc055Mtr03.iOverloadTripped := TIIB[N30S07 (EL1008)]^Channel 2^Input;
		.Enc055Mtr04.iOverloadTripped := TIIB[N30S07 (EL1008)]^Channel 4^Input;
		.Enc055Mtr05.iOverloadTripped := TIIB[N30S07 (EL1008)]^Channel 6^Input;
		.Enc055Mtr06.iOverloadTripped := TIIB[N30S07 (EL1008)]^Channel 8^Input;
		.Enc054Mtr01.iOverloadTripped := TIIB[N25S06 (EL1008)]^Channel 6^Input;
		.Enc054Mtr02.iOverloadTripped := TIIB[N25S06 (EL1008)]^Channel 8^Input;
		.Enc054Mtr03.iOverloadTripped := TIIB[N25S07 (EL1008)]^Channel 2^Input;
		.Enc054Mtr04.iOverloadTripped := TIIB[N25S07 (EL1008)]^Channel 4^Input;
		.Enc054Mtr05.iOverloadTripped := TIIB[N25S07 (EL1008)]^Channel 6^Input;
		.Enc054Mtr06.iOverloadTripped := TIIB[N25S07 (EL1008)]^Channel 8^Input;
		.Enc054Mtr07.iOverloadTripped := TIIB[N25S08 (EL1008)]^Channel 2^Input;
		.Enc054Mtr08.iOverloadTripped := TIIB[N25S08 (EL1008)]^Channel 4^Input;
		.Enc054Mtr09.iOverloadTripped := TIIB[N25S08 (EL1008)]^Channel 6^Input;
		.Enc055Mtr01.iRunning := TIIB[N30S06 (EL1008)]^Channel 5^Input;
		.Enc055Mtr02.iRunning := TIIB[N30S06 (EL1008)]^Channel 7^Input;
		.Enc055Mtr03.iRunning := TIIB[N30S07 (EL1008)]^Channel 1^Input;
		.Enc055Mtr04.iRunning := TIIB[N30S07 (EL1008)]^Channel 3^Input;
		.Enc055Mtr05.iRunning := TIIB[N30S07 (EL1008)]^Channel 5^Input;
		.Enc055Mtr06.iRunning := TIIB[N30S07 (EL1008)]^Channel 7^Input;
		.Enc054Mtr01.iRunning := TIIB[N25S06 (EL1008)]^Channel 5^Input;
		.Enc054Mtr02.iRunning := TIIB[N25S06 (EL1008)]^Channel 7^Input;
		.Enc054Mtr03.iRunning := TIIB[N25S07 (EL1008)]^Channel 1^Input;
		.Enc054Mtr04.iRunning := TIIB[N25S07 (EL1008)]^Channel 3^Input;
		.Enc054Mtr05.iRunning := TIIB[N25S07 (EL1008)]^Channel 5^Input;
		.Enc054Mtr06.iRunning := TIIB[N25S07 (EL1008)]^Channel 7^Input;
		.Enc054Mtr07.iRunning := TIIB[N25S08 (EL1008)]^Channel 1^Input;
		.Enc054Mtr08.iRunning := TIIB[N25S08 (EL1008)]^Channel 3^Input;
		.Enc054Mtr09.iRunning := TIIB[N25S08 (EL1008)]^Channel 5^Input;
		.Enc055Mtr01.oRun := TIIB[N30S12 (EL2008)]^Channel 4^Output;
		.Enc055Mtr02.oRun := TIIB[N30S12 (EL2008)]^Channel 5^Output;
		.Enc055Mtr03.oRun := TIIB[N30S12 (EL2008)]^Channel 6^Output;
		.Enc055Mtr04.oRun := TIIB[N30S12 (EL2008)]^Channel 7^Output;
		.Enc055Mtr05.oRun := TIIB[N30S12 (EL2008)]^Channel 8^Output;
		.Enc055Mtr06.oRun := TIIB[N30S13 (EL2008)]^Channel 1^Output;
		.Enc054Mtr01.oRun := TIIB[N25S12 (EL2008)]^Channel 5^Output;
		.Enc054Mtr02.oRun := TIIB[N25S12 (EL2008)]^Channel 6^Output;
		.Enc054Mtr03.oRun := TIIB[N25S12 (EL2008)]^Channel 7^Output;
		.Enc054Mtr04.oRun := TIIB[N25S12 (EL2008)]^Channel 8^Output;
		.Enc054Mtr05.oRun := TIIB[N25S13 (EL2008)]^Channel 1^Output;
		.Enc054Mtr06.oRun := TIIB[N25S13 (EL2008)]^Channel 2^Output;
		.Enc054Mtr07.oRun := TIIB[N25S13 (EL2008)]^Channel 3^Output;
		.Enc054Mtr08.oRun := TIIB[N25S13 (EL2008)]^Channel 4^Output;
		.Enc054Mtr09.oRun := TIIB[N25S13 (EL2008)]^Channel 5^Output'}
	MtrCtrls: ConvMtrCtrlsPuck;

	MtrNOKtoRun : BOOL;	
	cntMotorStartIndex: DINT;	
	tmrMotorStartIndex: TON;


END_VAR
VAR CONSTANT	
	
	cMaxMotorStartIndex :DINT := 9;  //If starting pairs of motors  adjust to max number of motors "per enclosure" /2
	
END_VAR	]]></Declaration>
    <Implementation>
      <ST><![CDATA[pMtrRunning := ADR(gProduced_SafetyInterfaceConv.MtrRunning);
pSafety := ADR(gProduced_SafetyInterfaceConv);

//Create sequenced motor start index - to prevent inrush overloads at time of motor start		
tmrMotorStartIndex(IN:=NOT tmrMotorStartIndex.Q,PT:=T#300ms);		
IF tmrMotorStartIndex.Q THEN 		
	cntMotorStartIndex := cntMotorStartIndex + 1;	
	IF cntMotorStartIndex > cMaxMotorStartIndex THEN 	
		cntMotorStartIndex := 1;
	END_IF	
END_IF		

// Call action code block that does call for each main line motor		
MotorCtrl();

//distibute the incoming stn data (consumed data from stn) to single produced outgoing to all stns
//MEMCPY(ADR(gProduced_SafetyInterfaceConv.gMtrRunningStn051), ADR(gMtrRunning), SizeOf(gProduced_SafetyInterfaceConv.gMtrRunningStn051));
]]></ST>
    </Implementation>
    <Action Name="MotorCtrl" Id="{5a40751f-d445-43e6-9651-238ae7e18c2e}">
      <Implementation>
        <ST><![CDATA[// Stn052_05_StnMain.MotorCtrl
// Call to motor control function block for each main line motor
// Blue Recv - Enc54: 7, 8, 9  Enc55: 5,6
// Red Recv  - Enc54: 4, 5, 6  Enc55: 3, 4
// Grn Recv  - Enc54: 1, 2, 3  Enc55: 1, 2
MtrCtrls.Enc054Mtr01(
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 1,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc054-Mtr1',
	MtrRunning => pMtrRunning^.Enc054Mtr01);

MtrCtrls.Enc054Mtr02(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 1,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc054-Mtr2',
	MtrRunning => pMtrRunning^.Enc054Mtr02);

MtrCtrls.Enc054Mtr03(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 2,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc054-Mtr3',
	MtrRunning => pMtrRunning^.Enc054Mtr03);

MtrCtrls.Enc054Mtr04(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 2,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc054-Mtr4',
	MtrRunning => pMtrRunning^.Enc054Mtr04);

MtrCtrls.Enc054Mtr05(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 3,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc054-Mtr5',
	MtrRunning => pMtrRunning^.Enc054Mtr05);

MtrCtrls.Enc054Mtr06(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 3,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc054-Mtr6',
	MtrRunning => pMtrRunning^.Enc054Mtr06);

MtrCtrls.Enc054Mtr07(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 4,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc054-Mtr7',
	MtrRunning => pMtrRunning^.Enc054Mtr07);

MtrCtrls.Enc054Mtr08(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 4,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc054-Mtr8',
	MtrRunning => pMtrRunning^.Enc054Mtr08);

MtrCtrls.Enc054Mtr09(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc054.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 5,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc054-Mtr9',
	MtrRunning => pMtrRunning^.Enc054Mtr09);

MtrCtrls.Enc055Mtr01(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc055.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc055.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 1,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc055-Mtr1',
	MtrRunning => pMtrRunning^.Enc055Mtr01);

MtrCtrls.Enc055Mtr02(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc055.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc055.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 1,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc055-Mtr2',
	MtrRunning => pMtrRunning^.Enc055Mtr02);

MtrCtrls.Enc055Mtr03(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc055.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc055.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 2,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc055-Mtr3',
	MtrRunning => pMtrRunning^.Enc055Mtr03);

MtrCtrls.Enc055Mtr04(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc055.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc055.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 2,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc055-Mtr4',
	MtrRunning => pMtrRunning^.Enc055Mtr04);

MtrCtrls.Enc055Mtr05(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc055.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc055.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 3,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc055-Mtr5',
	MtrRunning => pMtrRunning^.Enc055Mtr05);

MtrCtrls.Enc055Mtr06(	
	CycleAuto := gConsumed_Stn052ToSafetyInterface.CycleAuto,
	CycleReset := gConsumed_Stn052ToSafetyInterface.CycleReset,
	NOKtoRun := pSafety^.Enc055.iEstopRlyTripped,	
//	NOKtoRun := pSafety^.Enc055.iEstopRlyTripped OR 
//		NOT gConsumed_Stn052ToSafetyInterface.Stn052PLCData[2].3 OR 
//		NOT gConsumed_Stn052ToSafetyInterface_OK,		
	StartIndexThisMotor := 3,
	StartIndexCurrent := cntMotorStartIndex,
	hoMtrName := 'Enc055-Mtr6',
	MtrRunning => pMtrRunning^.Enc055Mtr06);


	
//For each motor that the station needs running information but NOT actually controlling the output… 
//(populate the running bit from the produced consumed logic)

// Populate motor running for motors controlled (outputs linked) by other stations
//gMtrRunning.Enc062Mtr07 := gConsumed_Stn901To902.ScratchPad[10].0;
]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="SafetyInterface_MtrCntrl052">
      <LineId Id="984" Count="2" />
      <LineId Id="992" Count="10" />
      <LineId Id="891" Count="0" />
      <LineId Id="893" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="SafetyInterface_MtrCntrl052.MotorCtrl">
      <LineId Id="547" Count="5" />
      <LineId Id="869" Count="1" />
      <LineId Id="840" Count="0" />
      <LineId Id="885" Count="2" />
      <LineId Id="555" Count="5" />
      <LineId Id="841" Count="0" />
      <LineId Id="871" Count="0" />
      <LineId Id="842" Count="0" />
      <LineId Id="888" Count="2" />
      <LineId Id="563" Count="5" />
      <LineId Id="843" Count="0" />
      <LineId Id="872" Count="0" />
      <LineId Id="844" Count="0" />
      <LineId Id="891" Count="2" />
      <LineId Id="571" Count="5" />
      <LineId Id="845" Count="0" />
      <LineId Id="873" Count="0" />
      <LineId Id="846" Count="0" />
      <LineId Id="894" Count="2" />
      <LineId Id="579" Count="5" />
      <LineId Id="847" Count="0" />
      <LineId Id="874" Count="0" />
      <LineId Id="848" Count="0" />
      <LineId Id="897" Count="2" />
      <LineId Id="587" Count="5" />
      <LineId Id="849" Count="0" />
      <LineId Id="875" Count="0" />
      <LineId Id="850" Count="0" />
      <LineId Id="900" Count="2" />
      <LineId Id="595" Count="5" />
      <LineId Id="851" Count="0" />
      <LineId Id="876" Count="0" />
      <LineId Id="852" Count="0" />
      <LineId Id="903" Count="2" />
      <LineId Id="603" Count="5" />
      <LineId Id="853" Count="0" />
      <LineId Id="877" Count="0" />
      <LineId Id="854" Count="0" />
      <LineId Id="906" Count="2" />
      <LineId Id="611" Count="5" />
      <LineId Id="855" Count="0" />
      <LineId Id="878" Count="0" />
      <LineId Id="856" Count="0" />
      <LineId Id="909" Count="2" />
      <LineId Id="619" Count="5" />
      <LineId Id="857" Count="0" />
      <LineId Id="879" Count="0" />
      <LineId Id="858" Count="0" />
      <LineId Id="912" Count="2" />
      <LineId Id="627" Count="5" />
      <LineId Id="859" Count="0" />
      <LineId Id="880" Count="0" />
      <LineId Id="860" Count="0" />
      <LineId Id="915" Count="2" />
      <LineId Id="635" Count="5" />
      <LineId Id="861" Count="0" />
      <LineId Id="881" Count="0" />
      <LineId Id="862" Count="0" />
      <LineId Id="918" Count="2" />
      <LineId Id="643" Count="5" />
      <LineId Id="863" Count="0" />
      <LineId Id="882" Count="0" />
      <LineId Id="864" Count="0" />
      <LineId Id="921" Count="2" />
      <LineId Id="651" Count="5" />
      <LineId Id="865" Count="0" />
      <LineId Id="883" Count="0" />
      <LineId Id="866" Count="0" />
      <LineId Id="924" Count="2" />
      <LineId Id="659" Count="5" />
      <LineId Id="867" Count="0" />
      <LineId Id="884" Count="0" />
      <LineId Id="868" Count="0" />
      <LineId Id="927" Count="2" />
      <LineId Id="667" Count="4" />
      <LineId Id="546" Count="0" />
      <LineId Id="162" Count="5" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>