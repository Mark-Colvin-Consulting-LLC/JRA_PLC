<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="Stn053_30_Stn211Divert" Id="{d9e3ade7-d381-4fe5-b016-bd73a117cffa}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Stn053_30_Stn211Divert
VAR
	fbTC: FB_Stn211DivertTC;
	{attribute 'TcLinkToOSO' := '.iPuckPresent   :=  <0,1,0>TIIB[N47S00 (AL1332)]^N47S01 (AL2341)^TxPDO^input byte 0;
								 .iMainBufferFull   :=  <0,1,0>TIIB[N47S00 (AL1332)]^N47S01 (AL2341)^TxPDO^input byte 2;
								 .iDivertMain   :=  <0,1,1>TIIB[N47S00 (AL1332)]^N47S01 (AL2341)^TxPDO^input byte 2;
								 .iDivertSpur   :=  <0,1,1>TIIB[N47S00 (AL1332)]^N47S01 (AL2341)^TxPDO^input byte 0;
								 .oDivertMain   :=  <0,1,2>TIIB[N47S00 (AL1332)]^N47S02 (EX260)^RxPDO^output byte 0;
								 .oDivertSpur   :=  <0,1,3>TIIB[N47S00 (AL1332)]^N47S02 (EX260)^RxPDO^output byte 0;
								 .oStopLower   :=  <0,1,0>TIIB[N47S00 (AL1332)]^N47S02 (EX260)^RxPDO^output byte 0'}

	{attribute 'TcLinkTo' := '.fbRFID.iRawArray[0] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 0;
                             .fbRFID.iRawArray[1] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 1;
                             .fbRFID.iRawArray[2] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 2;
                             .fbRFID.iRawArray[3] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 3;
                             .fbRFID.iRawArray[4] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 4;
                             .fbRFID.iRawArray[5] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 5;
                             .fbRFID.iRawArray[6] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 6;
                             .fbRFID.iRawArray[7] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 7;
                             .fbRFID.iRawArray[8] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 8;
                             .fbRFID.iRawArray[9] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 9;
                             .fbRFID.iRawArray[10] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 10;
                             .fbRFID.iRawArray[11] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 11;
                             .fbRFID.iRawArray[12] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 12;
                             .fbRFID.iRawArray[13] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 13;
                             .fbRFID.iRawArray[14] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 14;
                             .fbRFID.iRawArray[15] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 15;
                             .fbRFID.iRawArray[16] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 16;
                             .fbRFID.iRawArray[17] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 17;
                             .fbRFID.iRawArray[18] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 18;
                             .fbRFID.iRawArray[19] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 19;
                             .fbRFID.iRawArray[20] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 20;
                             .fbRFID.iRawArray[21] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 21;
                             .fbRFID.iRawArray[22] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 22;
                             .fbRFID.iRawArray[23] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 23;
                             .fbRFID.iRawArray[24] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 24;
                             .fbRFID.iRawArray[25] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 25;
                             .fbRFID.iRawArray[26] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 26;
                             .fbRFID.iRawArray[27] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 27;
                             .fbRFID.iRawArray[28] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 28;
                             .fbRFID.iRawArray[29] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 29;
                             .fbRFID.iRawArray[30] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 30;
                             .fbRFID.iRawArray[31] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^TxPDO^input byte 31;
							 .fbRFID.oRawArray[0] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 0;
                             .fbRFID.oRawArray[1] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 1;
                             .fbRFID.oRawArray[2] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 2;
                             .fbRFID.oRawArray[3] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 3;
                             .fbRFID.oRawArray[4] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 4;
                             .fbRFID.oRawArray[5] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 5;
                             .fbRFID.oRawArray[6] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 6;
                             .fbRFID.oRawArray[7] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 7;
                             .fbRFID.oRawArray[8] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 8;
                             .fbRFID.oRawArray[9] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 9;
                             .fbRFID.oRawArray[10] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 10;
                             .fbRFID.oRawArray[11] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 11;
                             .fbRFID.oRawArray[12] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 12;
                             .fbRFID.oRawArray[13] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 13;
                             .fbRFID.oRawArray[14] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 14;
                             .fbRFID.oRawArray[15] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 15;
                             .fbRFID.oRawArray[16] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 16;
                             .fbRFID.oRawArray[17] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 17;
                             .fbRFID.oRawArray[18] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 18;
                             .fbRFID.oRawArray[19] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 19;
                             .fbRFID.oRawArray[20] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 20;
                             .fbRFID.oRawArray[21] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 21;
                             .fbRFID.oRawArray[22] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 22;
                             .fbRFID.oRawArray[23] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 23;
                             .fbRFID.oRawArray[24] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 24;
                             .fbRFID.oRawArray[25] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 25;
                             .fbRFID.oRawArray[26] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 26;
                             .fbRFID.oRawArray[27] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 27;
                             .fbRFID.oRawArray[28] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 28;
                             .fbRFID.oRawArray[29] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 29;
                             .fbRFID.oRawArray[30] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 30;
                             .fbRFID.oRawArray[31] := TIIB[N47S00 (AL1332)]^N47S06 (DTI425)^RxPDO^output byte 31'}
	fbConvDivert: FB_ConvDivertPuck;
	
	Debug_config_IsCRTC1: BOOL := 1;
	Debug_config_IsPilot: BOOL := 0;
	
	Debug_InBypassThisStn: BOOL := 0;
	Debug_InBypassDownstreamStn: BOOL := 0;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Mappings to/from remote stations
gStn053_30_Stn211Divert.MainHeartbeatOK := TRUE; // because this PLC is Main
gStn053_30_Stn211Divert.MainConvRunning :=   gConsumed_SafetyInterfaceConv.MtrRunning.Enc056Mtr06;
gStn053_30_Stn211Divert.MainInAuto := gStn053.CycleAuto;

gStn053_30_Stn211Divert.SpurHeartbeatOK := gConsumed_Stn211To053_OK;
gStn053_30_Stn211Divert.SpurConvRunning := gConsumed_Stn211To053.SpurConvRunning;
gStn053_30_Stn211Divert.SpurInAuto := gConsumed_Stn211To053.StationInAuto;
gStn053_30_Stn211Divert.SpurBufferFull := gConsumed_Stn211To053.DivertSpurDSBufferFull;

//Custom mappings directly into the traffic control call for this divert (not passed though common divert logic)
fbTC.InBypassThisStn := Debug_InBypassThisStn;
fbTC.BufferNeeds.NeedEmpties := gConsumed_Stn211To053.ScratchPad[1].0;
fbTC.BufferNeeds.NeedFullPriorityNormal := gConsumed_Stn211To053.ScratchPad[1].1;
fbTC.BufferNeeds.NeedFullPriorityHigh := gConsumed_Stn211To053.ScratchPad[1].2;

// Configs for divert traffic control
fbTC.config_IsCRTC1 := Debug_config_IsCRTC1;
fbTC.config_IsPilot := Debug_config_IsPilot;
fbTC.config_SpurNOKThrottleTime_Pilot := T#7S;  // TODO RCC: remove when debug bit removed inside TC code. Note only applies if debug bit on


//TODO RCC - Eventually populate station bypass inputs to TC
// Call to traffic control function block.
fbTC(
	pCmp := ADR(gStn053_30_Stn211Divert)
);

// Call to divert component logic instance.
fbConvDivert(
	pStn := ADR(gStn053),
	pCmp := ADR(gStn053_30_Stn211Divert),
	pStateTraceBuffer := ADR(gStn053_StateTraceBuffer),
	pStateTraceFifo := ADR(gStn053_StateTraceFifo),
	pStats := ADR(gStn053_02_Stats)
);]]></ST>
    </Implementation>
    <LineIds Name="Stn053_30_Stn211Divert">
      <LineId Id="3" Count="1" />
      <LineId Id="295" Count="0" />
      <LineId Id="6" Count="4" />
      <LineId Id="12" Count="0" />
      <LineId Id="209" Count="1" />
      <LineId Id="122" Count="2" />
      <LineId Id="121" Count="0" />
      <LineId Id="14" Count="1" />
      <LineId Id="17" Count="1" />
      <LineId Id="20" Count="6" />
      <LineId Id="29" Count="7" />
      <LineId Id="2" Count="0" />
      <LineId Id="298" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>