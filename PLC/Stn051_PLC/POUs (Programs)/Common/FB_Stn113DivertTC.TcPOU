<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="FB_Stn113DivertTC" Id="{bd15dce4-92b8-4bec-9825-bf644a45b880}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Stn113DivertTC
VAR_INPUT
	
	pCmp: POINTER TO CmpConvDivert;
	
	InBypassThisStn: BOOL;
	
	config_ConsolidationOffline: BOOL;
	
END_VAR

VAR
	
	MainRunning: BOOL;
	SpurRunning: BOOL;
	
	onsPuckReady: R_TRIG;
	ResolvedDBStatusRoute: cResolvedDBStatusRoute;
	DBRouteToSpur_Empty: BOOL;
	DBRouteToSpur_Full: BOOL;
	RouteToSpur: BOOL;
	
	ReleaseToNotBlockMain: BOOL;
		
	Debug_DivertAllToMain: BOOL;
	Debug_DivertAllToSpur: BOOL;
	Debug_BlockLoadingMode: BOOL := FALSE;
	
END_VAR


]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Traffic control for specific dirvert - Stn111-114
// 
// Currently each divert has independent/unique function block as it is expected that they will
//   eventually need to be tweeked for specific application

Debug_BlockLoadingMode := FALSE;
config_ConsolidationOffline := FALSE;


// Sum of main/spur running conditions... don't release if not running
MainRunning :=
	pCmp^.MainHeartbeatOK AND
	pCmp^.MainConvRunning;

SpurRunning :=
	pCmp^.SpurHeartbeatOK AND
	pCmp^.SpurConvRunning;
	
// On rising edge of puck ready interpret the puck/device data to see if it should be diverted to spur
onsPuckReady(CLK:=pCmp^.PuckReady);
IF onsPuckReady.Q THEN 	
	// Call function to turn DB puck/device status/route into single readable resolution
	ResolvedDBStatusRoute :=
		FN_ResolveDBStatusRoutePuck(
			Puck := pCmp^.Puck,
			RouteToWork := cDBDetailRoute.FastReceiving);
		
	// Use DB route and other possible line status to determine if puck should go to spur
	DBRouteToSpur_Empty := 
		NOT Debug_BlockLoadingMode AND (
		ResolvedDBStatusRoute = cResolvedDBStatusRoute.Empty_NoRoute OR
		ResolvedDBStatusRoute = cResolvedDBStatusRoute.Empty_RoutedThisStation OR
		ResolvedDBStatusRoute = cResolvedDBStatusRoute.Empty_RoutedOtherStation);
	
	DBRouteToSpur_Full := 
		ResolvedDBStatusRoute = cResolvedDBStatusRoute.Normal_RoutedException OR
		ResolvedDBStatusRoute = cResolvedDBStatusRoute.Normal_RoutedConsolidation OR
		ResolvedDBStatusRoute = cResolvedDBStatusRoute.NonNormal_RoutedException  OR
		ResolvedDBStatusRoute = cResolvedDBStatusRoute.UnknownDevice ;
END_IF

//  Note that only "full" puck receving as determined above are headed to exception which only occurs on pilot)
//    Also only for pilot allow the station to request blcoking empties/only divet fulls if idle so exception have easy room to come off)
RouteToSpur := 
	(DBRouteToSpur_Full AND
	config_ConsolidationOffline) OR
	DBRouteToSpur_Empty;

ReleaseToNotBlockMain := 
	NOT SpurRunning OR
	NOT pCmp^.senSpurBufferFullOff;
	
// Release main if DB route is not to spur, or even if it is to spur when this station is bypassed,
//   or release to not block main line traffic, or if CRTC1 to release eveey other spur heading puck downstream
//   for partner station to have work.
pCmp^.PuckReleaseMain := 
	pCmp^.PuckReady AND
	MainRunning AND
	((NOT RouteToSpur OR
	(RouteToSpur AND 
	(InBypassThisStn OR
	ReleaseToNotBlockMain))) OR
	Debug_DivertAllToMain) AND
	NOT Debug_DivertAllToSpur;

// Release to spur if that is route and it is available.
//    and not trying to keep downstream station fed.
pCmp^.PuckReleaseSpur :=
	pCmp^.PuckReady AND
	MainRunning AND
	SpurRunning AND
	((RouteToSpur AND
	NOT InBypassThisStn) OR
	Debug_DivertAllToSpur) AND
	NOT Debug_DivertAllToMain;
	]]></ST>
    </Implementation>
    <LineIds Name="FB_Stn113DivertTC">
      <LineId Id="546" Count="3" />
      <LineId Id="681" Count="2" />
      <LineId Id="680" Count="0" />
      <LineId Id="550" Count="20" />
      <LineId Id="648" Count="0" />
      <LineId Id="571" Count="44" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>