<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="Stn054_45_CleaningRecircExitDivertGrn" Id="{aec2270f-d3ee-4d18-a1da-0b45dc4d8e62}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Stn054_45_CleaningRecircExitDivertGrn
VAR
	
	fbTC: FB_CleaningRecircExitDivertTC;

	// we are going to use the remote feature instead of linking this
	//.iMainBufferFull :=  <0,1,1>TIIB[N57S00 (AL1332)]^N57S03 (AL2341)^TxPDO^input byte 3;

	{attribute 'TcLinkToOSO' := '
			.iPuckPresent :=  <0,1,0>TIIB[N58S00 (AL1332)]^N58S03 (AL2341)^TxPDO^input byte 0;
			.iDivertSpur :=  <0,1,1>TIIB[N58S00 (AL1332)]^N58S03 (AL2341)^TxPDO^input byte 0;
			.iDivertMain :=  <0,1,1>TIIB[N58S00 (AL1332)]^N58S03 (AL2341)^TxPDO^input byte 2;
			.oDivertMain :=  <0,1,6>TIIB[N58S00 (AL1332)]^N58S02 (EX260)^RxPDO^output byte 2;
			.oDivertSpur :=  <0,1,7>TIIB[N58S00 (AL1332)]^N58S02 (EX260)^RxPDO^output byte 2;
			.oStopLower  :=  <0,1,3>TIIB[N58S00 (AL1332)]^N58S02 (EX260)^RxPDO^output byte 2'}

	{attribute 'TcLinkTo' := '
							.fbRFID.iRawArray[0] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 0;
                             .fbRFID.iRawArray[1] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 1;
                             .fbRFID.iRawArray[2] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 2;
                             .fbRFID.iRawArray[3] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 3;
                             .fbRFID.iRawArray[4] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 4;
                             .fbRFID.iRawArray[5] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 5;
                             .fbRFID.iRawArray[6] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 6;
                             .fbRFID.iRawArray[7] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 7;
                             .fbRFID.iRawArray[8] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 8;
                             .fbRFID.iRawArray[9] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 9;
                             .fbRFID.iRawArray[10] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 10;
                             .fbRFID.iRawArray[11] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 11;
                             .fbRFID.iRawArray[12] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 12;
                             .fbRFID.iRawArray[13] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 13;
                             .fbRFID.iRawArray[14] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 14;
                             .fbRFID.iRawArray[15] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 15;
                             .fbRFID.iRawArray[16] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 16;
                             .fbRFID.iRawArray[17] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 17;
                             .fbRFID.iRawArray[18] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 18;
                             .fbRFID.iRawArray[19] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 19;
                             .fbRFID.iRawArray[20] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 20;
                             .fbRFID.iRawArray[21] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 21;
                             .fbRFID.iRawArray[22] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 22;
                             .fbRFID.iRawArray[23] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 23;
                             .fbRFID.iRawArray[24] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 24;
                             .fbRFID.iRawArray[25] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 25;
                             .fbRFID.iRawArray[26] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 26;
                             .fbRFID.iRawArray[27] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 27;
                             .fbRFID.iRawArray[28] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 28;
                             .fbRFID.iRawArray[29] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 29;
                             .fbRFID.iRawArray[30] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 30;
                             .fbRFID.iRawArray[31] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^TxPDO^input byte 31;
							.fbRFID.oRawArray[0] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 0;
                             .fbRFID.oRawArray[1] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 1;
                             .fbRFID.oRawArray[2] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 2;
                             .fbRFID.oRawArray[3] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 3;
                             .fbRFID.oRawArray[4] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 4;
                             .fbRFID.oRawArray[5] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 5;
                             .fbRFID.oRawArray[6] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 6;
                             .fbRFID.oRawArray[7] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 7;
                             .fbRFID.oRawArray[8] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 8;
                             .fbRFID.oRawArray[9] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 9;
                             .fbRFID.oRawArray[10] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 10;
                             .fbRFID.oRawArray[11] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 11;
                             .fbRFID.oRawArray[12] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 12;
                             .fbRFID.oRawArray[13] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 13;
                             .fbRFID.oRawArray[14] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 14;
                             .fbRFID.oRawArray[15] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 15;
                             .fbRFID.oRawArray[16] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 16;
                             .fbRFID.oRawArray[17] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 17;
                             .fbRFID.oRawArray[18] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 18;
                             .fbRFID.oRawArray[19] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 19;
                             .fbRFID.oRawArray[20] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 20;
                             .fbRFID.oRawArray[21] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 21;
                             .fbRFID.oRawArray[22] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 22;
                             .fbRFID.oRawArray[23] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 23;
                             .fbRFID.oRawArray[24] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 24;
                             .fbRFID.oRawArray[25] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 25;
                             .fbRFID.oRawArray[26] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 26;
                             .fbRFID.oRawArray[27] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 27;
                             .fbRFID.oRawArray[28] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 28;
                             .fbRFID.oRawArray[29] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 29;
                             .fbRFID.oRawArray[30] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 30;
                             .fbRFID.oRawArray[31] := TIIB[N58S00 (AL1332)]^N58S04 (DTI425)^RxPDO^output byte 31'}
	fbConvDivert: FB_ConvDivertPuck;

//GRN Cleaning Recirc Exit Divert Spur DS Buffer
	{attribute 'TcLinkToOSO'
		 := '<0,1,2>TIIB[N58S00 (AL1332)]^N58S03 (AL2341)^TxPDO^input byte 2'}
	iSpurBufferFull AT %I*: BOOL;		

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//VB19 near Stn 321
//CleaningRecircExit DivertMainPrestopGRN  (10B)
//CleaningRecircExit DivertMain (12AB)
//CleaningRecircExitDivertSpur (12AB)
//GRN Cleaning Recirc Exit Divert Stop Puck Present (N57S03)
//GRN Cleaning Recirc Exit Merge Main Stop DS Buffer  (N58S03)
//GRN Cleaning Recirc Exit Diverter Spur
//GRN Cleaning Recirc Exit Diverter Main

//GRN Cleaning Recirc Exit Divert Spur DS Buffer

// Mappings to/from remote stations
gStn054_45_CleaningRecircExitDivertGrn.MainHeartbeatOK := TRUE; // because this PLC is Main
gStn054_45_CleaningRecircExitDivertGrn.MainConvRunning := gConsumed_SafetyInterfaceConv.MtrRunning.Enc058Mtr04 AND gConsumed_SafetyInterfaceConv.MtrRunning.Enc058Mtr06;
gStn054_45_CleaningRecircExitDivertGrn.MainInAuto := gStn054.CycleAuto;

gStn054_45_CleaningRecircExitDivertGrn.SpurHeartbeatOK := TRUE;
gStn054_45_CleaningRecircExitDivertGrn.SpurConvRunning := gConsumed_SafetyInterfaceConv.MtrRunning.Enc058Mtr04 AND gConsumed_SafetyInterfaceConv.MtrRunning.Enc058Mtr06;
gStn054_45_CleaningRecircExitDivertGrn.SpurInAuto := gStn054.CycleAuto;

gStn054_45_CleaningRecircExitDivertGrn.SpurBufferFull := iSpurBufferFull;
gStn054_45_CleaningRecircExitDivertGrn.RemoteBufferFullMain := gStn054_47_CleaningRecircExitSpurMergePrestopGrn.StatusPuckPresent;

//TODO RCC - Eventually populate station bypass inputs to TC
// Call to traffic control function block.
fbTC(
	pCmp := ADR(gStn054_45_CleaningRecircExitDivertGrn)
);

// Call to divert component logic instance.
fbConvDivert(
	pStn := ADR(gStn054),
	pCmp := ADR(gStn054_45_CleaningRecircExitDivertGrn),
	pStateTraceBuffer := ADR(gStn054_StateTraceBuffer),
	pStateTraceFifo := ADR(gStn054_StateTraceFifo),
	pStats := ADR(gStn054_02_Stats));
	
	]]></ST>
    </Implementation>
    <LineIds Name="Stn054_45_CleaningRecircExitDivertGrn">
      <LineId Id="299" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="78" Count="1" />
      <LineId Id="124" Count="3" />
      <LineId Id="87" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="94" Count="1" />
      <LineId Id="213" Count="0" />
      <LineId Id="97" Count="2" />
      <LineId Id="214" Count="0" />
      <LineId Id="101" Count="2" />
      <LineId Id="389" Count="0" />
      <LineId Id="104" Count="14" />
      <LineId Id="86" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>